[tool.poetry]
name = "hx-requests"
version = "0.35.1"
description = "Facilitates the usage of HTMX with Django"
authors = ["yaakovLowenstein <lowensteinyaakov@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/yaakovLowenstein/hx-requests"
keywords = ["django", "htmx"]
    classifiers=[
        "Environment :: Web Environment",
        "Intended Audience :: Developers",
        "Operating System :: OS Independent",
        "Framework :: Django",
        "Framework :: Django :: 3.2",
        "Framework :: Django :: 4.0",
        "Framework :: Django :: 4.1",
        "Programming Language :: Python",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
]
include = [
    "LICENSE"
]
[tool.poetry.dependencies]
python = "^3.8"
Django = ">=3.2,<5"
django-render-block = "^0.10"


[tool.poetry.group.dev.dependencies]
python-semantic-release = "^7.31.2"
pre-commit = "^3.2.1"

[tool.poetry.group.docs.dependencies]
pygments = "^2.18.0"
sphinx = "^6.1.3"
sphinx-autoapi = "^3.0.0"
sphinx-rtd-theme = "^1.2.0"

[tool.ruff]
exclude = [
    ".git",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 105
indent-width = 4

[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "E",  # Error (pycodesyle)
    "W",  # Warning (pycodesyle)
    "F",  # pyflakes
    "I",  # isort
    "ISC", # flake8-implicit-str-concat
    "PGH",  # pygrep-hooks
    "Q",  # flake8-quotes
    "DJ", # flake8-django
    "SIM",  # flake8-simplify
    "UP",  # pyupgrade
    "C4", # flake8-comprehensions
    "T10", # flake8-debugger
    "PT", # flake8-ptest-style
    "C90", # flake8-mccabe
]
ignore = [
    "W191",  # Indentation contains tabs
    "E111",  # Indentation is not a multiple of four
    "E114",  # Indentation is not a multiple of four (comment)
    "E117",  # Over-indented
    "E501",  # Line too long
    "Q000",  # Remove bad quotes (inline)
    "Q001",  # Remove bad quotes (multiline)
    "Q002",  # Remove bad quotes (docstring)
    "Q003",  # Remove avoidable escaped quote
    "ISC001",  # Implicit string concatenation (single-line)
    "ISC002",  # Implicit string concatenation (multi-line)
    "B026", # Star-arg unpacking after a keyword argument is strongly discouraged
    "B904", # 'assertRaises' should be used as a context manager
    "DJ001" # Avoid using null=True on string-based fields such as CharField and TextField
]

[tool.ruff.lint.per-file-ignores]
"**/tests/**" = ["C90"]


[tool.ruff.format]
docstring-code-format = true
# For migrations
# exclude = [
#     "app/migrations/**",
# ]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.semantic_release]
version_variable = [
    "hx_requests/__init__.py:__version__"
]
version_toml = [
    "pyproject.toml:tool.poetry.version"
]
upload_to_repository = false
upload_to_release = true
build_command = "poetry build"
commit_message = "Automatically generated by python-semantic-release [skip actions]"
major_on_zero = false

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
